name: deploy
on:
  push:
    paths-ignore:
    - "README.md"
    - "LICENSE"
    - "azuredeploy.*"
    - "assets/**"

jobs:
  check:
    runs-on: "ubuntu-latest"
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-go@v2
      with:
        go-version: '^1.16.3'
    - name: Test
      run: go test -race -coverprofile="coverage.txt" -covermode=atomic
    - name: Upload coverage
      uses: codecov/codecov-action@v1

  package:
    runs-on: "ubuntu-latest"
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-go@v2
      with:
        go-version: '^1.16.3'
    - name: Package
      run: make package.zip
    - name: Push PreRelease
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "nightly"
        prerelease: true
        title: "Development Build"
        files: package.zip
    - name: Archive package
      uses: actions/upload-artifact@v2
      with:
        name: package
        path: package.zip

  test-deploy:
    needs: package
    environment: Test
    runs-on: "ubuntu-latest"
    steps:
    - name: Sync trigger
      run: curl -sSf -HContent-Length:0 -XPOST "https://$APP_NAME.azurewebsites.net/admin/host/synctriggers?code=$API_KEY"
      env:
        APP_NAME: ${{ secrets.AZURE_FUNCTION_NAME }}
        API_KEY: ${{ secrets.AZURE_FUNCTION_API_KEY }}

  release:
    needs:
      - package
      - check
    runs-on: "ubuntu-latest"
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
    - name: Download Archive from package job
      uses: actions/download-artifact@v2
      with:
        name: package
    - name: Push Release
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: latest
        prerelease: false
        files: package.zip

# vim:set ts=2 sw=2 sts=2:
